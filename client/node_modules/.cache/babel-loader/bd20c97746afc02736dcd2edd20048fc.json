{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANIKET BISWAS\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CONTACTS, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filtered: state.filtered,\n      filterContacts,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Users/ANIKET BISWAS/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuid","axios","contactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CONTACTS","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","id","type","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,WAAR,EAAoBC,cAApB,EAAmCC,WAAnC,EAA+CC,cAA/C,EAA8DC,aAA9D,EAA4EC,cAA5E,EAA2FC,eAA3F,EAA2GC,YAA3G,QAA8H,UAA9H;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAU;AAC3B,QAAMC,YAAY,GAAC;AACfC,IAAAA,QAAQ,EAAC,EADM;AAEfC,IAAAA,OAAO,EAAC,IAFO;AAGfC,IAAAA,QAAQ,EAAE;AAHK,GAAnB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBrB,UAAU,CAACK,cAAD,EAAgBW,YAAhB,CAAnC,CAN2B,CAQ3B;;AACA,QAAMM,UAAU,GAAGC,OAAD,IAAY;AAC1BA,IAAAA,OAAO,CAACC,EAAR,GAAWtB,IAAI,EAAf;AACAmB,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEnB,WAAP;AAAoBoB,MAAAA,OAAO,EAAEH;AAA7B,KAAD,CAAR;AACH,GAHD,CAT2B,CAe3B;;;AACA,QAAMI,aAAa,GAAIH,EAAD,IAAO;AACzBH,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAElB,cAAP;AAAuBmB,MAAAA,OAAO,EAAEF;AAAhC,KAAD,CAAR;AACH,GAFD,CAhB2B,CAqB3B;;;AACA,QAAMI,UAAU,GAAIL,OAAD,IAAY;AAC3BF,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEjB,WAAP;AAAoBkB,MAAAA,OAAO,EAAEH;AAA7B,KAAD,CAAR;AACH,GAFD,CAtB2B,CA0B3B;;;AACA,QAAMM,YAAY,GAAG,MAAK;AACtBR,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEf;AAAP,KAAD,CAAR;AACH,GAFD,CA3B2B,CA8B3B;;;AACA,QAAMoB,aAAa,GAAIP,OAAD,IAAY;AAC9BF,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEd,cAAP;AAAuBe,MAAAA,OAAO,EAAEH;AAAhC,KAAD,CAAR;AACH,GAFD,CA/B2B,CAmC3B;;;AACA,QAAMQ,cAAc,GAAIC,IAAD,IAAS;AAC5BX,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEb,eAAP;AAAwBc,MAAAA,OAAO,EAAEM;AAAjC,KAAD,CAAR;AAEH,GAHD,CApC2B,CAyC3B;;;AACA,QAAMC,WAAW,GAAG,MAAK;AACrBZ,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEZ;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AACHI,MAAAA,QAAQ,EAACG,KAAK,CAACH,QADZ;AAEHC,MAAAA,OAAO,EAACE,KAAK,CAACF,OAFX;AAGHI,MAAAA,UAHG;AAIHK,MAAAA,aAJG;AAKHC,MAAAA,UALG;AAMHC,MAAAA,YANG;AAOHC,MAAAA,aAPG;AAQHX,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QARb;AASHY,MAAAA,cATG;AAUHE,MAAAA;AAVG,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaKlB,KAAK,CAACmB,QAbX,CADJ;AAmBH,CAjED;;AAkEA,eAAepB,YAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport {v4 as uuid} from 'uuid';\r\nimport axios from 'axios';\r\nimport contactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CONTACTS,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER} from '../types';\r\n\r\n\r\nconst ContactState = (props) =>{\r\n    const initialState={\r\n        contacts:[],\r\n        current:null,\r\n        filtered: null\r\n    };\r\n    const [state, dispatch]= useReducer(contactReducer,initialState);\r\n\r\n    //Add Contact\r\n    const addContact =(contact) =>{\r\n        contact.id=uuid();\r\n        dispatch({type: ADD_CONTACT, payload: contact})\r\n    }\r\n\r\n\r\n    //Delete Contact\r\n    const deleteContact = (id) =>{\r\n        dispatch({type: DELETE_CONTACT, payload: id})\r\n    }\r\n\r\n\r\n    //Set Current Contact\r\n    const setCurrent = (contact) =>{\r\n        dispatch({type: SET_CURRENT, payload: contact})\r\n    }\r\n\r\n    //Clear Current Contact\r\n    const clearCurrent = () =>{\r\n        dispatch({type: CLEAR_CURRENT})\r\n    }\r\n    //Update Contact\r\n    const updateContact = (contact) =>{\r\n        dispatch({type: UPDATE_CONTACT, payload: contact})\r\n    }\r\n\r\n    //Filter Contacts\r\n    const filterContacts = (text) =>{\r\n        dispatch({type: FILTER_CONTACTS, payload: text})\r\n\r\n    }\r\n\r\n    //Clear Filter\r\n    const clearFilter = () =>{\r\n        dispatch({type: CLEAR_FILTER})\r\n    }\r\n\r\n    return(\r\n        <contactContext.Provider \r\n        value={{\r\n            contacts:state.contacts,\r\n            current:state.current,\r\n            addContact,\r\n            deleteContact,\r\n            setCurrent,\r\n            clearCurrent,\r\n            updateContact,\r\n            filtered: state.filtered,\r\n            filterContacts,\r\n            clearFilter\r\n         }}>\r\n            {props.children}\r\n        </contactContext.Provider>\r\n    );\r\n\r\n\r\n};\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}