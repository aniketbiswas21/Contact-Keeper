{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANIKET BISWAS\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CONTACTS, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Get Contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filtered: state.filtered,\n      filterContacts,\n      clearFilter,\n      error: state.error\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Users/ANIKET BISWAS/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","contactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CONTACTS","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","config","headers","post","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,WAAR,EAAoBC,cAApB,EAAmCC,WAAnC,EAA+CC,cAA/C,EAA8DC,aAA9D,EAA4EC,cAA5E,EAA2FC,eAA3F,EAA2GC,YAA3G,EAAyHC,aAAzH,EAAwIC,YAAxI,QAA2J,UAA3J;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAU;AAC3B,QAAMC,YAAY,GAAC;AACfC,IAAAA,QAAQ,EAAC,IADM;AAEfC,IAAAA,OAAO,EAAC,IAFO;AAGfC,IAAAA,QAAQ,EAAE,IAHK;AAIfC,IAAAA,KAAK,EAAE;AAJQ,GAAnB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBtB,UAAU,CAACG,cAAD,EAAgBa,YAAhB,CAAnC,CAP2B,CAS3B;;AACA,QAAMO,WAAW,GAAG,YAAW;AAC3B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,eAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEb,YAAP;AAAqBc,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAAlC,OAAD,CAAR;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVP,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEd,aAAP;AAAsBe,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaC;AAA5C,OAAD,CAAR;AACH;AACJ,GAPD,CAV2B,CAoB3B;;;AACA,QAAMC,UAAU,GAAG,MAAOC,OAAP,IAAkB;AACjC,UAAMC,MAAM,GAAE;AACVC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADC,KAAd;;AAKA,QAAI;AACA,YAAMX,GAAG,GAAG,MAAMvB,KAAK,CAACmC,IAAN,CAAW,eAAX,EAA4BH,OAA5B,EAAqCC,MAArC,CAAlB;AACAZ,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEtB,WAAP;AAAoBuB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAAjC,OAAD,CAAR;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVP,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEd,aAAP;AAAsBe,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaC;AAA5C,OAAD,CAAR;AACH;AACJ,GAZD,CArB2B,CAoC3B;;;AACA,QAAMM,aAAa,GAAIC,EAAD,IAAO;AACzBhB,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAErB,cAAP;AAAuBsB,MAAAA,OAAO,EAAEW;AAAhC,KAAD,CAAR;AACH,GAFD,CArC2B,CA0C3B;;;AACA,QAAMC,UAAU,GAAIN,OAAD,IAAY;AAC3BX,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEpB,WAAP;AAAoBqB,MAAAA,OAAO,EAAEM;AAA7B,KAAD,CAAR;AACH,GAFD,CA3C2B,CA+C3B;;;AACA,QAAMO,YAAY,GAAG,MAAK;AACtBlB,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAElB;AAAP,KAAD,CAAR;AACH,GAFD,CAhD2B,CAmD3B;;;AACA,QAAMiC,aAAa,GAAIR,OAAD,IAAY;AAC9BX,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEjB,cAAP;AAAuBkB,MAAAA,OAAO,EAAEM;AAAhC,KAAD,CAAR;AACH,GAFD,CApD2B,CAwD3B;;;AACA,QAAMS,cAAc,GAAIC,IAAD,IAAS;AAC5BrB,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEhB,eAAP;AAAwBiB,MAAAA,OAAO,EAAEgB;AAAjC,KAAD,CAAR;AAEH,GAHD,CAzD2B,CA8D3B;;;AACA,QAAMC,WAAW,GAAG,MAAK;AACrBtB,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEf;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AACHM,MAAAA,QAAQ,EAACI,KAAK,CAACJ,QADZ;AAEHC,MAAAA,OAAO,EAACG,KAAK,CAACH,OAFX;AAGHc,MAAAA,UAHG;AAIHK,MAAAA,aAJG;AAKHE,MAAAA,UALG;AAMHC,MAAAA,YANG;AAOHC,MAAAA,aAPG;AAQHtB,MAAAA,QAAQ,EAAEE,KAAK,CAACF,QARb;AASHuB,MAAAA,cATG;AAUHE,MAAAA,WAVG;AAWHxB,MAAAA,KAAK,EAAEC,KAAK,CAACD;AAXV,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcKL,KAAK,CAAC8B,QAdX,CADJ;AAoBH,CAvFD;;AAwFA,eAAe/B,YAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\nimport contactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CONTACTS,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS} from '../types';\r\n\r\n\r\nconst ContactState = (props) =>{\r\n    const initialState={\r\n        contacts:null,\r\n        current:null,\r\n        filtered: null,\r\n        error: null\r\n    };\r\n    const [state, dispatch]= useReducer(contactReducer,initialState);\r\n\r\n    //Get Contacts\r\n    const getContacts = async () =>{\r\n        try {\r\n            const res = await axios.get('/api/contacts');\r\n            dispatch({type: GET_CONTACTS, payload: res.data})\r\n        } catch (err) {\r\n            dispatch({type: CONTACT_ERROR, payload: err.response.msg})\r\n        }\r\n    }\r\n\r\n\r\n    //Add Contact\r\n    const addContact = async (contact) =>{\r\n        const config ={\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/contacts', contact, config);\r\n            dispatch({type: ADD_CONTACT, payload: res.data})\r\n        } catch (err) {\r\n            dispatch({type: CONTACT_ERROR, payload: err.response.msg})\r\n        }\r\n    }\r\n\r\n\r\n    //Delete Contact\r\n    const deleteContact = (id) =>{\r\n        dispatch({type: DELETE_CONTACT, payload: id})\r\n    }\r\n\r\n\r\n    //Set Current Contact\r\n    const setCurrent = (contact) =>{\r\n        dispatch({type: SET_CURRENT, payload: contact})\r\n    }\r\n\r\n    //Clear Current Contact\r\n    const clearCurrent = () =>{\r\n        dispatch({type: CLEAR_CURRENT})\r\n    }\r\n    //Update Contact\r\n    const updateContact = (contact) =>{\r\n        dispatch({type: UPDATE_CONTACT, payload: contact})\r\n    }\r\n\r\n    //Filter Contacts\r\n    const filterContacts = (text) =>{\r\n        dispatch({type: FILTER_CONTACTS, payload: text})\r\n\r\n    }\r\n\r\n    //Clear Filter\r\n    const clearFilter = () =>{\r\n        dispatch({type: CLEAR_FILTER})\r\n    }\r\n\r\n    return(\r\n        <contactContext.Provider \r\n        value={{\r\n            contacts:state.contacts,\r\n            current:state.current,\r\n            addContact,\r\n            deleteContact,\r\n            setCurrent,\r\n            clearCurrent,\r\n            updateContact,\r\n            filtered: state.filtered,\r\n            filterContacts,\r\n            clearFilter,\r\n            error: state.error\r\n         }}>\r\n            {props.children}\r\n        </contactContext.Provider>\r\n    );\r\n\r\n\r\n};\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}