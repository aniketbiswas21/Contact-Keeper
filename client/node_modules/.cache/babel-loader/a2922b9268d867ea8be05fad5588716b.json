{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANIKET BISWAS\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CONTACTS, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      type: \"personal\",\n      name: \"Eobard Thawne\",\n      email: \"killallen@gmail.com\",\n      phone: \"12314553232\",\n      id: 1\n    }, {\n      type: \"professional\",\n      name: \"Barry Allen\",\n      email: \"ballen@gmail.com\",\n      phone: \"1234553232\",\n      id: 2\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n  //Clear Filter\n\n\n  return /*#__PURE__*/React.createElement(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Users/ANIKET BISWAS/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuid","contactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CONTACTS","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","type","name","email","phone","id","current","state","dispatch","addContact","contact","payload","deleteContact","setCurrent","clearCurrent","updateContact","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,WAAR,EAAoBC,cAApB,EAAmCC,WAAnC,EAA+CC,cAA/C,EAA8DC,aAA9D,EAA4EC,cAA5E,EAA2FC,eAA3F,EAA2GC,YAA3G,QAA8H,UAA9H;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAU;AAC3B,QAAMC,YAAY,GAAC;AACfC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,IAAI,EAAC,UADT;AAEIC,MAAAA,IAAI,EAAC,eAFT;AAGIC,MAAAA,KAAK,EAAC,qBAHV;AAIIC,MAAAA,KAAK,EAAC,aAJV;AAKIC,MAAAA,EAAE,EAAC;AALP,KADM,EAQN;AACIJ,MAAAA,IAAI,EAAC,cADT;AAEIC,MAAAA,IAAI,EAAC,aAFT;AAGIC,MAAAA,KAAK,EAAC,kBAHV;AAIIC,MAAAA,KAAK,EAAC,YAJV;AAKIC,MAAAA,EAAE,EAAC;AALP,KARM,CADK;AAiBfC,IAAAA,OAAO,EAAC;AAjBO,GAAnB;AAmBA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBxB,UAAU,CAACI,cAAD,EAAgBW,YAAhB,CAAnC,CApB2B,CAsB3B;;AACA,QAAMU,UAAU,GAAGC,OAAD,IAAY;AAC1BA,IAAAA,OAAO,CAACL,EAAR,GAAWnB,IAAI,EAAf;AACAsB,IAAAA,QAAQ,CAAC;AAACP,MAAAA,IAAI,EAAEZ,WAAP;AAAoBsB,MAAAA,OAAO,EAAED;AAA7B,KAAD,CAAR;AACH,GAHD,CAvB2B,CA6B3B;;;AACA,QAAME,aAAa,GAAIP,EAAD,IAAO;AACzBG,IAAAA,QAAQ,CAAC;AAACP,MAAAA,IAAI,EAAEX,cAAP;AAAuBqB,MAAAA,OAAO,EAAEN;AAAhC,KAAD,CAAR;AACH,GAFD,CA9B2B,CAmC3B;;;AACA,QAAMQ,UAAU,GAAIH,OAAD,IAAY;AAC3BF,IAAAA,QAAQ,CAAC;AAACP,MAAAA,IAAI,EAAEV,WAAP;AAAoBoB,MAAAA,OAAO,EAAED;AAA7B,KAAD,CAAR;AACH,GAFD,CApC2B,CAwC3B;;;AACA,QAAMI,YAAY,GAAG,MAAK;AACtBN,IAAAA,QAAQ,CAAC;AAACP,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AACH,GAFD,CAzC2B,CA4C3B;;;AACA,QAAMsB,aAAa,GAAIL,OAAD,IAAY;AAC9BF,IAAAA,QAAQ,CAAC;AAACP,MAAAA,IAAI,EAAEP,cAAP;AAAuBiB,MAAAA,OAAO,EAAED;AAAhC,KAAD,CAAR;AACH,GAFD,CA7C2B,CAiD3B;AAEA;;;AAGA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AACHV,MAAAA,QAAQ,EAACO,KAAK,CAACP,QADZ;AAEHM,MAAAA,OAAO,EAACC,KAAK,CAACD,OAFX;AAGHG,MAAAA,UAHG;AAIHG,MAAAA,aAJG;AAKHC,MAAAA,UALG;AAMHC,MAAAA;AANG,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKhB,KAAK,CAACkB,QATX,CADJ;AAeH,CArED;;AAsEA,eAAenB,YAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport {v4 as uuid} from 'uuid';\r\nimport contactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CONTACTS,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER} from '../types';\r\n\r\n\r\nconst ContactState = (props) =>{\r\n    const initialState={\r\n        contacts: [\r\n            {\r\n                type:\"personal\",\r\n                name:\"Eobard Thawne\",\r\n                email:\"killallen@gmail.com\",\r\n                phone:\"12314553232\",\r\n                id:1\r\n            },\r\n            {\r\n                type:\"professional\",\r\n                name:\"Barry Allen\",\r\n                email:\"ballen@gmail.com\",\r\n                phone:\"1234553232\",\r\n                id:2\r\n            }\r\n        ],\r\n        current:null\r\n    };\r\n    const [state, dispatch]= useReducer(contactReducer,initialState);\r\n\r\n    //Add Contact\r\n    const addContact =(contact) =>{\r\n        contact.id=uuid();\r\n        dispatch({type: ADD_CONTACT, payload: contact})\r\n    }\r\n\r\n\r\n    //Delete Contact\r\n    const deleteContact = (id) =>{\r\n        dispatch({type: DELETE_CONTACT, payload: id})\r\n    }\r\n\r\n\r\n    //Set Current Contact\r\n    const setCurrent = (contact) =>{\r\n        dispatch({type: SET_CURRENT, payload: contact})\r\n    }\r\n\r\n    //Clear Current Contact\r\n    const clearCurrent = () =>{\r\n        dispatch({type: CLEAR_CURRENT})\r\n    }\r\n    //Update Contact\r\n    const updateContact = (contact) =>{\r\n        dispatch({type: UPDATE_CONTACT, payload: contact})\r\n    }\r\n\r\n    //Filter Contacts\r\n\r\n    //Clear Filter\r\n\r\n\r\n    return(\r\n        <contactContext.Provider \r\n        value={{\r\n            contacts:state.contacts,\r\n            current:state.current,\r\n            addContact,\r\n            deleteContact,\r\n            setCurrent,\r\n            clearCurrent\r\n         }}>\r\n            {props.children}\r\n        </contactContext.Provider>\r\n    );\r\n\r\n\r\n};\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}