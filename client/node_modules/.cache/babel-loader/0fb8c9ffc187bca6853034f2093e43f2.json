{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANIKET BISWAS\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/auth/AuthContext';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const authContext = useContext(AuthContext);\n  const {\n    isAuthenticated,\n    loading\n  } = authContext;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }\n    })) //load the component if authenticated and whatever props are there with it.\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 8\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/ANIKET BISWAS/Desktop/contact-keeper/client/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","rest","authContext","isAuthenticated","loading","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAsC;AACvD,QAAMC,WAAW,GAAER,UAAU,CAACG,WAAD,CAA7B;AACA,QAAK;AAAEM,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA6BF,WAAlC;AACA,sBACG,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,IAAA,MAAM,EAAEI,KAAK,IAAI,CAACF,eAAD,IAAoB,CAACC,OAArB,gBAC9B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD8B,gBAG9B,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAH8B,CAGa;AAH/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH;AAOH,CAVD;;AAYA,eAAeP,YAAf","sourcesContent":["import React, {useContext} from 'react';\r\nimport {Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../../context/auth/AuthContext';\r\n\r\n\r\nconst PrivateRoute = ({component: Component, ...rest }) => {\r\n    const authContext= useContext(AuthContext);\r\n    const{ isAuthenticated, loading} =authContext;\r\n    return (\r\n       <Route {...rest} render={props => !isAuthenticated && !loading ? (\r\n           <Redirect to ='/login' />\r\n       ):(\r\n           <Component {...props} />                   //load the component if authenticated and whatever props are there with it.\r\n       )}/>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n"]},"metadata":{},"sourceType":"module"}